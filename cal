#!/usr/bin/env ruby

$LOAD_PATH << "lib"

require 'calcalc'
require 'month'
require 'year'

abort ("cal: please enter either a year after 1752, or a month and year separated by a space") unless ARGV.length == 1 || ARGV.length == 2

reg = /--rows=\d/

if ARGV.length == 1 || ARGV.length ==2 && reg.match(ARGV[1]) #instructions if there is only one command-line argument, which must be a year, or one argument plus the --rows=# option
  #--------------------------------------------Checks to make sure the user input a number greater than 1752 for the year
  year = ARGV[0]
  abort ("cal: please enter a numerical year later than 1752, the year of the English change from the Julian to Gregorian calendar.") if year.to_i < 1753
  #--------------------------------------------

  rows = 4
  if ARGV[1]
    r = ARGV[1].delete('-rows=')
    rows = r.to_i
  end
  cols = (12.0/rows).ceil

  month_strings = Year.new(year).to_a

  puts "                             #{year}"
  puts

  s = 0
  lines_per_month = 8
  rows.times do
    lines_per_month.times do |j|
      i = s
      line = ''
      cols.times do
        break if i > 11
        if (i+1)%cols == 0
          line << month_strings[i].slice(20*j, 20)
        else
          line << month_strings[i].slice(20*j, 20) + '  '
        end
        i += 1
      end
      puts line.rstrip
    end
    s += cols
  end

elsif ARGV.length == 2 #instructions if there are two command-line arguments, which must be a month and year
  m = ARGV[0]
  year = ARGV[1]

  #--------------------------------------------Checks to see if the user input the month as a word or three-letter abbreviation rather than a number, and converts to a month number
  long_months = %w(January February March April May June July August September October November December)
  short_months = %w(Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
  if long_months.include?(m.capitalize)
    month = (long_months.index(m.capitalize)+1)
  elsif short_months.include?(m.capitalize)
    month = (short_months.index(m.capitalize)+1)
  elsif m.to_i != 0
    month = m.to_i
  else
    abort ("cal: please enter either a month number, the full name of a month, or the three-letter short name of a month")
  end
  #--------------------------------------------

  month = Month.new(month, year).to_a

  month.each do |line|
    puts line.rstrip
  end
end
