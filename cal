#!/usr/bin/env ruby

$LOAD_PATH << "lib"

require 'calcalc'
require 'month'

abort ("cal: please enter either a year after 1752, or a month and year separated by a space") unless ARGV.length == 1 || ARGV.length == 2

reg = /--rows=\d/

if ARGV.length == 1 || ARGV.length ==2 && reg.match(ARGV[1]) #instructions if there is only one command-line argument, which must be a year, or one argument plus the --rows=# option

  year = ARGV[0]
  abort ("cal: please enter a numerical year later than 1752, the year of the English change from the Julian to Gregorian calendar") if year.to_i < 1753

  rows = 4
  if ARGV[1]
    r = ARGV[1].delete('-rows=')
    rows = r.to_i
  end
  cols = (12.0/rows).ceil

  month_strings = []
  i = 1
  12.times do
    month_strings << Month.new(i.to_s, year).to_year_s
    i += 1
  end

  puts "                             #{year}"
  puts

  s = 0
  rows.times do
    j = 0
    8.times do
      i = s
      str = ''
      cols.times do
        break if i > 11
        if (i+1)%cols == 0
          str << month_strings[i].slice(20*j, 20)
        else
          str << month_strings[i].slice(20*j, 20) + '  '
        end
        i += 1
      end
      puts str.rstrip
      j += 1
    end
    s += cols
  end

elsif ARGV.length == 2 #instructions if there are two command-line arguments, which must be a month and year

  month = Month.new(ARGV[0], ARGV[1])

  m_string = month.to_month_s

  m_array = m_string.scan(/.{20}/)

  final_line_count = m_string.length%20

  final_line = m_string.slice(final_line_count*-1, final_line_count)

  m_array << final_line if final_line != ''

  m_array.each do |line|
    puts line.rstrip
  end

end
